-- Data hub Ui 
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/robloxfui/LuxuriosLib/main/Librarys'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/robloxfui/LuxuriosHub2/main/ThemeManager'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/robloxfui/LuxuriosHub3/main/SaveManager'))()
    

Library:Notify("Thanks for Buy Data Hub.", 2)

local Window = Library:CreateWindow({
    Title = 'Data Hub Premium Script',
    Center = true, 
    AutoShow = true,
})

local function UpdateTime()
    local GameTime = math.floor(workspace.DistributedGameTime+0.5)
    local Hour = math.floor(GameTime/(60^2))%24
    local Minute = math.floor(GameTime/(60^1))%60
    local Second = math.floor(GameTime/(60^0))%60
    Library:SetWatermark('Data Hub Premium Script | Hours : '..Hour..' Minutes : '..Minute..' Seconds : '..Second)
    end
    spawn(function()
          while true do
          UpdateTime()
          game:GetService("RunService").RenderStepped:Wait()
          end
   end)

local Tabs = {
    General = Window:AddTab('General'),
Visuals = Window:AddTab('Visuals'),
TPandDungeon = Window:AddTab('TP & Dungeon'),
Misc = Window:AddTab('Misc'),
Status = Window:AddTab('Status'),
    ['UI Settings'] = Window:AddTab('Settings'),
Info = Window:AddTab('Info')
}




















local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)

ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager. 
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings() 

-- Adds our MenuKeybind to the ignore list 
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 

-- use case for doing it this way: 
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings']) 

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config 
-- which has been marked to be one that auto loads!








local Infoscript = Tabs.Info:AddLeftTabbox() -- Add Tabbox on left side
local Owner = Infoscript:AddTab('Owner')
Owner:AddLabel('Owner : kami komoo â€¢#9072')
