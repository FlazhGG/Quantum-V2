repeat task.wait()until game:IsLoaded()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)
local CommF = Remotes:WaitForChild("CommF_", 9e9)

local Quantum = loadstring(game:HttpGet("https://raw.githubusercontent.com/FlazhGG/Quantum-V2/main/QuantumHubLibrary"))()

local Window = Quantum:CreateWindow({
    Title = "Quantum Hub",
    SubTitle = "BloxFruit",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 430),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Quantum",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

local Info = Window:AddTab({Title = "Info", Icon = "crown"})



task.spawn(function()
    -- Store original functions
    local originalWarn = warn
    local originalError = error
    local originalRconsolewarn = rconsolewarn
    local originalRconsoleerr = rconsoleerr
    local originalPrint = print

    -- Override functions to suppress output
    warn = function() end
    error = function() end
    rconsolewarn = function() end
    rconsoleerr = function() end
    print = function() end  -- Optional: Suppress regular print statements too

    -- Loop and destroy effects (error-safe)
    pcall(function()  -- Use pcall to handle potential errors
        for _, effect in pairs(ReplicatedStorage:WaitForChild("Effect"):WaitForChild("Container"):GetChildren()) do
            if effect.Name == "Death" or effect.Name == "Spawn" then
                effect:Destroy()
            end
        end
    end)

    -- Restore original functions (optional, for debugging)
    warn = originalWarn
    error = originalError
    rconsolewarn = originalRconsolewarn
    rconsoleerr = originalRconsoleerr
    print = originalPrint -- Optional: Restore print if suppressed
end)
