--[[
	Libary:
		<Window> :xova()
	Window:
		<Tab> .create(<string> title)
	Tab:
		<Page> :xovapage()
	Page:
		<void> .TextBox(<table> {Title <string>, PlaceHolder <string>, callback <function<string>>})
		<void> .Line()
																- Mode 1 = no description, 2 = with description
		<Toggle> .Toggle(<table> {Title <string>, Desc <string>, Mode <number>, Default <bool>, callback <function<bool>>})
		<Label> .Label(<table> {Title <string>})
		<void> .Button(<table> {Title <string>, callback <function<>>})
		<Dropdown> .Dropdown(<table> {Title <string>, Item <table<string>>, callback <function<string>>})
		<Dropdown> .MultiDropdown(<table> {Title <string>, Item <table<string>>, callback <function<table<string>>>})
		<Slider> .Slider(<table> {Title <string>, Max <number>, Min <number>, Default <number>, callback <function<number>>})
		
		Toggle:
			<void> .lock()
			<void> .unlock()
			<void> .ChangeDesc(<string> description)
		Label:
			<void> .Update(<string> title)
			<void> .UpdateColor(<Color3> color)
		Dropdown:
			<void> .Add(<string> item)
			<void> .Clear()
		Slider:
			<void> .Update(<number> progress)
]]

local ui = loadstring(game:HttpGet("https://raw.githubusercontent.com/SixZensED/Secret-0.01/main/Unique.lua"))()

local window = ui:xova()
local tab1 = window.create("tab 1")
local leftPage = tab1.xovapage(1)
local rightPage = tab1.xovapage(2)

leftPage.TextBox({
	Title = "Textbox title",
	PlaceHolder = "Textbox placeholder",
	callback = function(text)
		print("text box was change to", text)
	end,
})

leftPage:Line()

-- mode 1 = no description
leftPage.Toggle({
	Title = "Toggle title",
	Default = false,
	callback = function(isToggle)
		print("toggle button 1 was clicked", isToggle)
	end,
})

-- mode 2 = with description
leftPage.Toggle({
	Title = "Toggle title",
	Desc = "Toggle with description",
	Mode = 2,
	Default = false,
	callback = function(isToggle)
		print("toggle button 2 was clicked", isToggle)
	end,
})

leftPage.Label({
	Title = "Lable title"
})

leftPage.Button({
	Title = "Button title",
	callback = function()
		print("Button was pressed")
	end,
})

leftPage.Dropdown({
	Title = "Dropdown title",
	Item = { 1, 2, 3, 4, 5, 6 },
	callback = function(item)
		print("new dropdown 1 was selected", item)
	end,
})

leftPage.MultiDropdown({
	Title = "MultiDropdown title",
	Item = { 1, 2, 3, 4, 5, 6 },
	callback = function(items)
		print("new multidropdown was selected", table.concat(items, ","))
	end,
})

leftPage.Slider({
	Title = "Slider title",
	Max = 100,
	Min = 0,
	Default = 50,
	callback = function(progress)
		print("slider progress", progress)
	end,
})














local toggleObj = rightPage.Toggle({
	Title = "Toggle title",
	Desc = "Toggle with description",
	Mode = 2,
	Default = false,
	callback = function(isToggle)
		print("toggle button 3 was clicked", isToggle)
	end,
})

rightPage.TextBox({
	Title = "Change toggle description",
	PlaceHolder = "new description",
	callback = function(text)
		toggleObj.ChangeDesc(text)
	end,
})

rightPage:Line()

local rngStrLable = rightPage.Label({
	Title = ""
})

local rwLable = rightPage.Label({
	Title = "Rainbow"
})

rightPage:Line()

local dropDownObj = rightPage.Dropdown({
	Title = "Dropdown title",
	Item = { },
	callback = function(item)
		print("new dropdown 2 was selected", item)
	end,
})

rightPage.TextBox({
	Title = "Add dropdown",
	PlaceHolder = "item",
	callback = function(text)
		dropDownObj.Add(text)
	end,
})

rightPage.Button({
	Title = "Clear dropdown",
	callback = function()
		dropDownObj.Clear()
	end,
})

rightPage:Line()

local wSlider = rightPage.Slider({
	Title = "woosh slider",
	Max = 100,
	Min = 0,
	Default = 0,
	callback = function(progress) end,
})



local charset = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"
math.randomseed(os.clock())
local function randomStr(len)
	local ret = {}
	local r
	for i = 1, len do
		r = math.random(1, #charset)
		table.insert(ret, charset:sub(r, r))
	end
	return table.concat(ret)
end

local function getRainbow(fred)
	local nTime = time()
	local r, g, b
	r = math.floor(math.sin(nTime * fred + 0) * 127 + 128)
	g = math.floor(math.sin(nTime * fred + 2) * 127 + 128)
	b = math.floor(math.sin(nTime * fred + 4) * 127 + 128)
	
	return r, g, b
end

task.spawn(function()
	while true do
		rwLable.UpdateColor(Color3.fromRGB(getRainbow(2)))
		wSlider.Update(math.floor(time() * 10 % 100))
		task.wait(0.07)
	end
end)

task.spawn(function()
	while true do
		rngStrLable.Update(randomStr(8))
		task.wait(2)
	end
end)
