repeat task.wait()until game:IsLoaded()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Remotes = ReplicatedStorage:WaitForChild("Remotes", 9e9)
local CommF = Remotes:WaitForChild("CommF_", 9e9)

local Quantum = loadstring(game:HttpGet("https://raw.githubusercontent.com/FlazhGG/Quantum-V2/main/QuantumHubLibrary"))()

local Window = Quantum:CreateWindow({
    Title = "Quantum Hub",
    SubTitle = "BloxFruit",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Quantum",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

local Info = Window:AddTab({Title = "Info", Icon = "crown"})

    task.spawn(function()
        -- Error Handling: Ensure objects exist before accessing them
        local EffectContainer = ReplicatedStorage:WaitForChild("Effect")
        if not EffectContainer then
            warn("Effect folder not found in ReplicatedStorage!")
            return -- Exit the script
        end
    
        EffectContainer = EffectContainer:WaitForChild("Container")
        if not EffectContainer then
            warn("Container folder not found within Effect!")
            return -- Exit the script
        end
    
        RunService.RenderStepped:Connect(function()
            -- Performance Improvement: Cache children instead of repeatedly searching
            local DeathEffect = EffectContainer:FindFirstChild("Death")
            local RespawnEffect = EffectContainer:FindFirstChild("Respawn")
    
            -- Clear effects if they exist
            if DeathEffect then DeathEffect:Destroy() end
            if RespawnEffect then RespawnEffect:Destroy() end
        end)
    
        -- Warning: Hooking error/warn functions can hide important debugging information.
        -- Use with caution!
        hookfunction(error, function() end)
        hookfunction(warn, function() end)
    end)
